/*--------------------------------------------------------------------
 * Grid 
 * Adapted from Darren Wong who adapted from Philip Walton 
 * http://philipwalton.github.io/solved-by-flexbox/
 *------------------------------------------------------------------*/

.grid {
    display: flex;
    flex-wrap: wrap;
    list-style: none;
    margin: 0;
    padding: 0;
}

.grid-cell {
    flex: 1;
}

.grid-full {
    .grid-cell {
        flex: 0 0 100%;

        @media (min-width: $bp-small) {
            flex: 1;
        }
    }

    .grid-cell-mid {
        flex: 0 0 100%;

        @media (min-width: $bp-large) {
            flex: 1;
        }
    }

    .grid-cell-icon {
        flex: 0 0 60%;

        @media (min-width: $bp-large) {
            flex: 1;
        }
    }
}

.grid-gutters {
    margin: -1em 0 1em -1em;

    .grid-cell {
        padding: 1em 0 0 1em;
    }
}

.grid-gutters-med {
    margin: -2em 0 2em -2em;

    .grid-cell {
        padding: 2em 0 0 2em;
    }
}

.grid-gutters-large {
    margin: -3em 0 3em -3em;

    .grid-cell {
        padding: 3em 0 0 3em;
    }

    .grid-cell-icon {
        padding: 3em 0 0 3em;
    }

    .grid-cell-mid {
        padding: 3em 0 0 3em;
    }
}


// add this to flip your grid (2up) - ensure the HTML is the same (img + text) as none-reversed grid
.grid-reverse {
    flex-direction: row-reverse;
}

.grid-start {
    justify-content: flex-start;
    align-self: flex-start;
}

.grid-center {
    align-items: center;
    justify-content: center;
}

.grid-end {
    align-items: flex-end;
    justify-content: flex-end;
    align-self: flex-end;
}

// Vertical centering

.aligner {
    display: flex;
    align-items: center;
    justify-content: center;
}

.aligner-item {
    width: 100%;

    @media (min-width: $bp-xlarge) {
        max-width: 50%;
    }
}

.aligner-item--top {
    align-self: flex-start;
}

.aligner-item--bottom {
    align-self: flex-end;
}